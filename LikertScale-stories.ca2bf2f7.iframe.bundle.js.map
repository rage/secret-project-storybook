{"version":3,"file":"LikertScale-stories.ca2bf2f7.iframe.bundle.js","mappings":";;;AAcA;;;;;;AAOA;;;;;;;;AAWA;;;;;;AAMA;;;;;AAKA;;;;;;;;;AASA;;;;;;;;;;AAUA;;;;;AAmBA","sources":["webpack://shared-module/./src/components/PeerReview/LikertScale.tsx"],"sourcesContent":["import styled from \"@emotion/styled\"\nimport React from \"react\"\nimport { useTranslation } from \"react-i18next\"\n\nimport Agree from \"../../img/likert/agree.svg\"\nimport Disagree from \"../../img/likert/disagree.svg\"\nimport Neutral from \"../../img/likert/neutral.svg\"\nimport StronglyAgree from \"../../img/likert/stronglyAgree.svg\"\nimport StronglyDisagree from \"../../img/likert/stronglyDisagree.svg\"\n\nconst Wrapper = styled.div`\n  margin: 1.5rem auto;\n  max-width: 1000px;\n`\nconst Question = styled.span`\n  font-size: 22px;\n  margin: 0 auto;\n  margin-bottom: 1rem;\n  display: block;\n  color: #1a2333;\n`\nconst Likerts = styled.div`\n  background: #f9f9f9;\n  min-height: 100px;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));\n  margin: 0 auto;\n  max-width: 1000px;\n  justify-items: center;\n`\n\n/* eslint-disable i18next/no-literal-string */\nconst Likert = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 15px 0;\n  background-color: ${({ active }: StyledProps) => (active ? \"#313947\" : \"#f9f9f9\")};\n  cursor: pointer;\n  transition: all 0.2s;\n\n  svg .bg {\n    fill: ${({ active }) => active && \"#ffd93b\"};\n  }\n\n  svg {\n    margin-top: 10px;\n    margin-bottom: 5px;\n  }\n\n  &:hover {\n    background: ${({ active }: StyledProps) => (active ? \"#313947\" : \"#babdc2\")};\n    svg .bg {\n      fill: #ffd93b;\n    }\n  }\n\n  .likert-scale-text {\n    margin-top: 6px;\n    font-size: 15px;\n    font-weight: 500;\n    color: ${({ active }) => (active ? \"#ffffff\" : \"#313947\")};\n    text-align: center;\n    line-height: 1.2;\n    padding: 0 0.5rem;\n  }\n`\n\ninterface LikertScaleProps {\n  disabled?: boolean\n  question: string\n  answerRequired: boolean\n  selectedOption: number | null\n  setSelectedOption: (value: number | null) => void\n}\n\ninterface StyledProps {\n  active: boolean\n}\n\nconst LikertScale: React.FC<React.PropsWithChildren<React.PropsWithChildren<LikertScaleProps>>> = ({\n  disabled,\n  question,\n  answerRequired,\n  selectedOption,\n  setSelectedOption,\n}) => {\n  const { t } = useTranslation()\n\n  const arr = [\n    {\n      text: t(\"likert-scale-strongly-disagree\"),\n      image: <StronglyDisagree />,\n    },\n    {\n      text: t(\"likert-scale-disagree\"),\n      image: <Disagree />,\n    },\n    {\n      text: t(\"likert-scale-neither-agree-nor-disagree\"),\n      image: <Neutral />,\n    },\n    {\n      text: t(\"likert-scale-agree\"),\n      image: <Agree />,\n    },\n    {\n      text: t(\"likert-scale-strongly-agree\"),\n      image: <StronglyAgree />,\n    },\n  ]\n\n  return (\n    <Wrapper>\n      <Question>\n        {question}\n        {answerRequired && \" *\"}\n      </Question>\n\n      <Likerts>\n        {arr.map((option, n) => (\n          <Likert\n            key={n + 1}\n            onClick={() => {\n              if (!disabled) {\n                setSelectedOption(n + 1)\n              }\n            }}\n            active={selectedOption === n + 1}\n          >\n            {option.image}\n            <p className=\"likert-scale-text\">{option.text}</p>\n          </Likert>\n        ))}\n      </Likerts>\n    </Wrapper>\n  )\n}\nLikertScale.defaultProps = { disabled: false }\n\nexport default LikertScale\n"],"names":[],"sourceRoot":""}
{"version":3,"file":"Accordion-stories.07dc7a1f.iframe.bundle.js","mappings":";;;AAWA;;;AAMA;;;;;;;;;;AAUA;AACA;;;;AAIA;;;;;;;;;;;;AAYA;;AAEA;AACA;;;;;;;;;;AAUA;;;;;;;AAOA;;;;;;;;;;;;;;;;;;;;;;AAsBA;;;;;;;;;;;;AAwBA;;;ACjGA;;;AAMA;;;;;AAKA;AACA;;;;AAIA;;;;;;;AAOA;;;;;;;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2DA","sources":["webpack://shared-module/./src/components/Accordion/DetailAccordion.tsx","webpack://shared-module/./src/components/Accordion/index.tsx"],"sourcesContent":["import { keyframes } from \"@emotion/css\"\nimport styled from \"@emotion/styled\"\nimport React from \"react\"\n\nimport { baseTheme } from \"../../styles\"\nimport { respondToOrLarger } from \"../../styles/respond\"\n\nconst openAnimation = keyframes`\n0% { opacity: 0; }\n100% { opacity: 1; }\n`\nconst slideDown = keyframes`\nfrom { opacity: 0; height: 0; padding: 0;}\nto { opacity: 1; height: 100%; padding: 10px;}\n`\n\n// eslint-disable-next-line i18next/no-literal-string\nconst TextWrapper = styled.div`\n  padding: 0;\n  margin: 0;\n\n  details {\n    border: 1px solid rgba(0, 0, 0, 0.2);\n    transition: all 0.3s ease-in-out;\n  }\n\n  details[open] summary ~ * {\n    animation: ${openAnimation} 0.3s ease-in-out;\n    color: ${baseTheme.colors.gray[700]};\n  }\n\n  details[open] > div {\n    animation-name: ${slideDown};\n    animation-duration: 0.3s;\n    animation-fill-mode: forwards;\n    padding: 1rem 1rem 1rem 2rem;\n  }\n\n  details summary {\n    padding: 1rem;\n    position: relative;\n    cursor: pointer;\n    font-weight: medium;\n    list-style: none;\n    color: ${baseTheme.colors.gray[700]};\n    outline: 0;\n    background: ${baseTheme.colors.clear[100]};\n    ${respondToOrLarger.sm} {\n      padding: 1rem 1rem 1rem 2rem;\n    }\n  }\n\n  details summary::-webkit-details-marker {\n    display: none;\n  }\n\n  details[open] > summary {\n    color: ${baseTheme.colors.gray[700]};\n  }\n\n  details summary:after {\n    content: \"+\";\n    position: absolute;\n    font-size: 2.4rem;\n    color: ${baseTheme.colors.gray[700]};\n    line-height: 0;\n    margin-top: 0.75rem;\n    top: 14px;\n    right: 4%;\n    font-weight: 200;\n    transform-origin: center;\n    transition: all 200ms linear;\n  }\n  details[open] summary:after {\n    transform: rotate(45deg);\n    font-size: 2.4rem;\n  }\n  details[open] summary {\n    font-weight: 600;\n    opacity: 0.9;\n  }\n\n  ul {\n    padding: 14px;\n    margin: 0;\n\n    ${respondToOrLarger.sm} {\n      background: #f9f9f9;\n      padding: 25px 35px 30px 35px;\n    }\n  }\n\n  ul li {\n    font-size: 1.1rem;\n    margin: 0 0 0.2rem;\n    line-height: 1.7;\n    list-style: none;\n  }\n`\n\nconst PLACEHOLDER_HEADING = \"This is a heading:\"\nconst PLACEHOLDER_TEXT = `Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown\nprinter took a galley of type and scrambled it to make a type specimen book. It has\nsurvived not only five centuries, but also the leap into electronic typesetting,\nremaining essentially unchanged. It was popularised in the 1960s with the release of\nLetraset sheets containing Lorem Ipsum passages, and more recently with desktop\npublishing software like Aldus PageMaker including versions of Lorem Ipsum`\n\nexport type AccordionProps = React.DetailsHTMLAttributes<HTMLDetailsElement>\n\nconst DetailAccordion: React.FC<\n  React.PropsWithChildren<React.PropsWithChildren<AccordionProps>>\n> = (props) => {\n  if (props.children) {\n    return <TextWrapper className={props.className}>{props.children}</TextWrapper>\n  }\n  return (\n    <div className={props.className}>\n      <TextWrapper>\n        <details>\n          <summary>{PLACEHOLDER_HEADING}</summary>\n          <ul>\n            <li>{PLACEHOLDER_TEXT}</li>\n          </ul>\n        </details>\n      </TextWrapper>\n    </div>\n  )\n}\n\nexport default DetailAccordion\n","import { keyframes } from \"@emotion/css\"\nimport styled from \"@emotion/styled\"\nimport React from \"react\"\n\nimport { baseTheme } from \"../../styles\"\n\nimport DetailAccordion from \"./DetailAccordion\"\n\nconst openAnimation = keyframes`\n0% { opacity: 0; }\n100% { opacity: 1; }\n`\n\nconst slideDown = keyframes`\nfrom { opacity: 0; height: 0; padding: 0;}\nto { opacity: 1; height: 100%; padding: 10px;}\n`\n\n// eslint-disable-next-line i18next/no-literal-string\nconst TextWrapper = styled.div`\n  padding: 0;\n  margin: 0;\n\n  details[open] summary ~ * {\n    animation: ${openAnimation} 0.3s ease-in-out;\n    color: ${baseTheme.colors.gray[700]};\n  }\n\n  details[open] > div {\n    animation-name: ${slideDown};\n    animation-duration: 0.3s;\n    animation-fill-mode: forwards;\n  }\n\n  details summary {\n    padding: 1rem 0;\n    border-bottom: 1px solid ${baseTheme.colors.gray[700]};\n    position: relative;\n    cursor: pointer;\n    font-size: 1.25rem;\n    font-weight: medium;\n    list-style: none;\n    outline: 0;\n    color: ${baseTheme.colors.gray[700]};\n  }\n\n  details summary::-webkit-details-marker {\n    display: none;\n  }\n\n  details[open] > summary {\n    color: #1c1c1c;\n  }\n\n  details summary:after {\n    content: \"+\";\n    color: black;\n    position: absolute;\n    font-size: 1.75rem;\n    line-height: 0;\n    margin-top: 0.75rem;\n    right: 0;\n    font-weight: 200;\n    transform-origin: center;\n    transition: all 200ms linear;\n  }\n  details[open] summary:after {\n    transform: rotate(45deg);\n    font-size: 2rem;\n  }\n  details[open] summary {\n    font-weight: 600;\n    opacity: 0.9;\n  }\n\n  ul {\n    padding: 0 0 0 0.6rem;\n  }\n\n  details ul li {\n    font-size: 1.1rem;\n    line-height: 1.6;\n    margin: 0 0 0.2rem;\n    padding-left: 8px;\n    list-style-position: outside;\n  }\n\n  ul li::marker {\n    content: \"â˜‰\";\n    text-align: center;\n    margin-left: 2rem !important;\n  }\n`\n\nconst PLACEHOLDER_HEADING = \"This is a heading:\"\nconst PLACEHOLDER_LIST_ITEM = \"This is a list item\"\nexport interface AccordionExtraProps {\n  variant: \"simple\" | \"detail\"\n}\n\nexport type AccordionProps = React.DetailsHTMLAttributes<HTMLDetailsElement> & AccordionExtraProps\n\nconst Accordion: React.FC<React.PropsWithChildren<React.PropsWithChildren<AccordionProps>>> = (\n  props,\n) => {\n  if (props.variant === \"detail\") {\n    return <DetailAccordion {...props}></DetailAccordion>\n  }\n\n  if (props.children) {\n    return <TextWrapper className={props.className}>{props.children}</TextWrapper>\n  }\n  return (\n    <div className={props.className}>\n      <TextWrapper>\n        <details>\n          <summary>{PLACEHOLDER_HEADING}</summary>\n          <ul>\n            <li>{PLACEHOLDER_LIST_ITEM}</li>\n            <li>{PLACEHOLDER_LIST_ITEM}</li>\n            <li>{PLACEHOLDER_LIST_ITEM}</li>\n            <li>{PLACEHOLDER_LIST_ITEM}</li>\n          </ul>\n        </details>\n        <details>\n          <summary>{PLACEHOLDER_HEADING}</summary>\n          <ul>\n            <li>{PLACEHOLDER_LIST_ITEM}</li>\n            <li>{PLACEHOLDER_LIST_ITEM}</li>\n            <li>{PLACEHOLDER_LIST_ITEM}</li>\n            <li>{PLACEHOLDER_LIST_ITEM}</li>\n          </ul>\n        </details>\n        <details>\n          <summary>{PLACEHOLDER_HEADING}</summary>\n          <ul>\n            <li>{PLACEHOLDER_LIST_ITEM}</li>\n            <li>{PLACEHOLDER_LIST_ITEM}</li>\n            <li>{PLACEHOLDER_LIST_ITEM}</li>\n            <li>{PLACEHOLDER_LIST_ITEM}</li>\n          </ul>\n        </details>\n      </TextWrapper>\n    </div>\n  )\n}\n\nexport default Accordion\n"],"names":[],"sourceRoot":""}
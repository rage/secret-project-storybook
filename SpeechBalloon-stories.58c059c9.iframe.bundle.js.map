{"version":3,"file":"SpeechBalloon-stories.58c059c9.iframe.bundle.js","mappings":";;;;;AAwBA;AAWA;;;AAGA;AA1BA;AAAA;;AAAA;AAoCA;;AAGA;;;;ACgEA","sources":["webpack://shared-module/./src/components/SpeechBalloon.tsx","webpack://shared-module/"],"sourcesContent":["import { css } from \"@emotion/css\"\nimport React from \"react\"\n\nimport { baseTheme } from \"../styles\"\nimport { runCallbackIfEnterPressed } from \"../utils/accessibility\"\n\nexport interface SpeechBalloonProps {\n  className?: string\n  onClick?: () => void\n  children?: React.ReactNode\n}\n\nconst SQUARE_SIZE = \"1rem\"\n\nconst SpeechBalloon = React.forwardRef<HTMLDivElement, SpeechBalloonProps>(\n  ({ children, className, onClick }, ref) => {\n    const bg = baseTheme.colors.gray[100]\n\n    const outerCss = css`\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      width: max-content;\n    `\n    return (\n      <div\n        ref={ref}\n        role=\"button\"\n        tabIndex={0}\n        onKeyDown={(e) => onClick && runCallbackIfEnterPressed(e, onClick)}\n        onClick={onClick}\n        className={`${outerCss} ${className}`}\n      >\n        <div\n          className={css`\n            background: ${bg};\n            width: max-content;\n            padding: 1rem;\n          `}\n        >\n          {children}\n        </div>\n        <div\n          className={css`\n            width: ${SQUARE_SIZE};\n            height: ${SQUARE_SIZE};\n            position: relative;\n            top: calc(-${SQUARE_SIZE} / 2);\n            background: ${bg};\n            transform: rotate(45deg);\n          `}\n        />\n      </div>\n    )\n  },\n)\n\n// eslint-disable-next-line i18next/no-literal-string\nSpeechBalloon.displayName = \"SpeechBalloon\"\nexport default SpeechBalloon\n"],"names":[],"sourceRoot":""}
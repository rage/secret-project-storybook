{"version":3,"file":"FloatingErrorBox-stories.9319da94.iframe.bundle.js","mappings":";;;;;;;;;;AAmBA;;;AAIA;;;;;;;;;;;;;AAaA;;;;AAgBA;AC4KA;AACA;AAGA;AACA;AA1HA;AA8HA;AACA;AAjGA;AAqGA;AACA;AAxEA;AA4EA;AACA;AAjDA;AAqDA;AACA;AA3KA;AA8KA;AACA;AAlKA;AAkLA;AAXA;AAWA","sources":["webpack://shared-module/./src/components/FloatingErrorBox.tsx","webpack://shared-module/./src/components/Button.tsx"],"sourcesContent":["import styled from \"@emotion/styled\"\nimport React from \"react\"\n\nimport Tick from \"../img/tick.svg\"\nimport { headingFont } from \"../styles\"\n\nimport Button from \"./Button\"\n\nconst ErrorWrapper = styled.div`\n  max-width: 460px;\n  height: 163px;\n  border-radius: 1px;\n  transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);\n  background: #f5f5f5;\n  display: grid;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n`\nconst ButtonWrapper = styled.div`\n  display: flex;\n  gap: 26px;\n`\nconst Message = styled.div`\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  width: 100%;\n  height: 30px;\n  background: #e2efec;\n  display: flex;\n  justify-content: center;\n  gap: 5px;\n\n  span {\n    display: inline-block;\n    font-family: ${headingFont};\n    color: #37bc9b;\n    align-self: center;\n  }\n`\n\nexport interface ErrorExtraProps {\n  variant: \"success\" | \"error\"\n  content: string\n}\n\nexport type ErrorProps = React.HTMLAttributes<HTMLDivElement> & ErrorExtraProps\n\nconst PLACEHOLDER_TEXT_ONE = \"Reset\"\nconst PLACEHOLDER_TEXT_TWO = \"Your edit has been saved!\"\n\nconst FloatingErrorBox: React.FC<\n  React.PropsWithChildren<React.PropsWithChildren<ErrorProps>>\n> = () => {\n  // If URL defined, the chapter is open\n\n  return (\n    <ErrorWrapper>\n      <ButtonWrapper>\n        <Button transform=\"capitalize\" variant=\"primary\" size=\"large\">\n          {PLACEHOLDER_TEXT_ONE}\n        </Button>\n        <Button transform=\"capitalize\" variant=\"secondary\" size=\"large\">\n          {PLACEHOLDER_TEXT_ONE}\n        </Button>\n      </ButtonWrapper>\n\n      <Message>\n        <Tick />\n        <span>{PLACEHOLDER_TEXT_TWO}</span>\n      </Message>\n    </ErrorWrapper>\n  )\n}\n\nexport default FloatingErrorBox\n","import styled from \"@emotion/styled\"\nimport React, { forwardRef, Ref } from \"react\"\n\nimport { baseTheme, fontWeights, headingFont, theme } from \"../styles\"\nimport { defaultFontSizePx } from \"../styles/constants\"\nimport { respondToOrLarger } from \"../styles/respond\"\n\nexport interface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  variant: \"primary\" | \"secondary\" | \"reject\" | \"tertiary\" | \"outlined\" | \"blue\" | \"white\" | \"icon\"\n  size: \"small\" | \"medium\" | \"large\"\n  transform?: \"capitalize\" | \"uppercase\" | \"none\" | \"lowercase\"\n  children?: React.ReactNode\n}\n\n// BaseButtonStyles is the primary button\nexport const BASE_BUTTON_STYLES = `\n  position: relative;\n  display: inline-block;\n  padding: ${theme.buttonSizes[\"large\"].padding};\n  font-family: ${headingFont};\n  font-weight: ${fontWeights.normal};\n  font-size: ${defaultFontSizePx}px;\n  line-height: normal;\n  vertical-align: baseline;\n  cursor: pointer;\n  user-select: none;\n  text-decoration: none;\n  text-align: center;\n  justify-content: center;\n  text-transform: uppercase;\n  letter-spacing: 0.02em;\n  transition: all 150ms linear;\n  border: 2.5px solid transparent;\n  z-index: 1;\n  white-space: nowrap;\n\n  color: ${theme.primary.text};\n  background-color: ${theme.primary.bg};\n  border-color: ${theme.primary.border};\n\n  &:hover {\n    color: ${theme.primary.hoverBorder};\n    background-color: ${theme.primary.hoverBg};\n    border-color: ${theme.primary.hoverBorder};\n    text-decoration: none;\n  }\n\n  &:active {\n    color: ${theme.primary.hoverText};\n    background-color: ${theme.primary.activeBg};\n    border-color: ${theme.primary.hoverBorder};\n  }\n\n  &:disabled {\n    color: ${theme.primary.disabledText};\n    background-color: ${theme.primary.disabledBg};\n    border-color: ${theme.primary.disabledBorder};\n    cursor: not-allowed;\n  }\n\n  &:focus {\n    text-decoration: none;\n  }\n\n\n  ${respondToOrLarger.sm} {\n    white-space: nowrap;\n  }\n`\n\nexport const PrimaryButtonStyles = (props: ButtonProps) => {\n  const PRIMARY_BUTTON_STYLES = `\n    text-transform: ${props.transform};\n    padding: ${theme.buttonSizes[props.size].padding};\n  `\n  return PRIMARY_BUTTON_STYLES\n}\n\nexport const WhiteButtonStyles = (props: ButtonProps) => {\n  const WHITE_BUTTON_STYLES = `\n    text-transform: ${props.transform};\n    padding: ${theme.buttonSizes[props.size].padding};\n\n    color: ${theme.white.text};\n    background: #FCFCFC;\n    border: 1.5px solid #DEDEDE;\n\n  `\n  return WHITE_BUTTON_STYLES\n}\n\nexport const IconButtonStyles = (props: ButtonProps) => {\n  const ICON_BUTTON_STYLES = `\n    text-transform: ${props.transform};\n    padding: ${theme.buttonSizes[props.size].padding};\n    color: black;\n    background: none;\n    border: 0px;\n\n    &:hover, &:active, &:disabled {\n      background: none;\n    }\n\n  `\n  return ICON_BUTTON_STYLES\n}\n\nexport const SecondaryButtonStyles = (props: ButtonProps) => {\n  const SECONDARY_BUTTON_STYLES = `\n    text-transform: ${props.transform};\n    padding: ${theme.buttonSizes[props.size].padding};\n\n    color: ${theme.secondary.text};\n    background: ${theme.secondary.bg};\n    border: 1.5px solid ${theme.secondary.border};\n\n    &:hover,\n    &:focus {\n      color: ${theme.secondary.hoverText};\n      box-shadow: 0 0 0 1px ${theme.secondary.text};\n      border: 1.5px solid ${theme.secondary.text};\n    }\n\n    &:active {\n      color: ${theme.secondary.hoverText};\n      background-color: ${theme.secondary.activeBg};\n    }\n\n    &:disabled {\n      color: ${theme.secondary.disabledText};\n      background-color: ${theme.secondary.disabledBg};\n      border-color: ${theme.secondary.disabledBorder};\n    }\n  `\n  return SECONDARY_BUTTON_STYLES\n}\n\nexport const RejectButtonStyles = (props: ButtonProps) => {\n  const REJECT_BUTTON_STYLES = `\n    text-transform: ${props.transform};\n    padding: ${theme.buttonSizes[props.size].padding};\n\n    color: ${theme.reject.text};\n    background: ${theme.reject.bg};\n    border: 1.5px solid ${theme.reject.border};\n\n    &:hover,\n    &:focus {\n      color: ${theme.reject.hoverText};\n      box-shadow: 0 0 0 1px ${theme.reject.text};\n      border: 1.5px solid ${theme.reject.text};\n    }\n\n    &:active {\n      color: ${theme.reject.hoverText};\n      background-color: ${theme.reject.activeBg};\n    }\n\n    &:disabled {\n      color: ${theme.reject.disabledText};\n      background-color: ${theme.reject.disabledBg};\n      border-color: ${theme.reject.disabledBorder};\n    }\n  `\n  return REJECT_BUTTON_STYLES\n}\n\nexport const TertiaryButtonStyles = (props: ButtonProps) => {\n  const TERTIARY_BUTTON_STYLES = `\n    text-transform: ${props.transform};\n    padding: ${theme.buttonSizes[props.size].padding};\n\n    color: ${theme.tertiary.text};\n    background-color: ${theme.tertiary.bg};\n    border: unset;\n\n    &:hover {\n      color: ${theme.tertiary.hoverText};\n      background-color: ${theme.tertiary.hoverBg};\n    }\n\n    &:active {\n      color: ${theme.tertiary.hoverText};\n      background-color: ${theme.tertiary.activeBg};\n    }\n\n    &:disabled {\n      color: ${theme.tertiary.disabledText};\n      background-color: ${theme.tertiary.disabledBg};\n      border-color: ${theme.tertiary.disabledBorder};\n    }\n  `\n  return TERTIARY_BUTTON_STYLES\n}\n\nexport const BlueButtonStyles = (props: ButtonProps) => {\n  const BLUE_BUTTON_STYLES = `\n    text-transform: ${props.transform};\n    padding: ${theme.buttonSizes[props.size].padding};\n\n    color: ${theme.tertiary.text};\n    background-color: ${baseTheme.colors.blue[500]};\n    border: unset;\n    border: 2px solid ${theme.secondary.border};\n\n    &:hover {\n      border: 2px solid ${baseTheme.colors.blue[600]};\n      color: ${baseTheme.colors.blue[700]};\n    }\n\n    &:active {\n      border: 2px solid ${baseTheme.colors.blue[400]};\n    }\n\n    &:disabled {\n      color: ${theme.secondary.disabledText};\n      background-color: ${theme.secondary.disabledBg};\n      border-color: ${theme.secondary.disabledBorder};\n    }\n  `\n  return BLUE_BUTTON_STYLES\n}\n\nconst PrimaryButton = styled.button`\n  ${BASE_BUTTON_STYLES}\n  ${PrimaryButtonStyles}\n`\n\nconst SecondaryButton = styled.button`\n  ${BASE_BUTTON_STYLES}\n  ${SecondaryButtonStyles}\n`\n\nconst RejectButton = styled.button`\n  ${BASE_BUTTON_STYLES}\n  ${RejectButtonStyles}\n`\n\nconst TertiaryButton = styled.button`\n  ${BASE_BUTTON_STYLES}\n  ${TertiaryButtonStyles}\n`\n\nconst BlueButton = styled.button`\n  ${BASE_BUTTON_STYLES}\n  ${BlueButtonStyles}\n`\n\nconst WhiteButton = styled.button`\n  ${BASE_BUTTON_STYLES}\n  ${WhiteButtonStyles}\n`\nconst IconButton = styled.button`\n  ${BASE_BUTTON_STYLES}\n  ${IconButtonStyles}\n`\n\nexport const LabelButton = styled.label`\n  ${BASE_BUTTON_STYLES}\n`\n\n/* BUTTON VARIANT\nPrimaryButton\nSecondaryButton\nGhostButton\nTertiaryButton\nIconButton\nLink */\n\nconst Button = forwardRef((props: ButtonProps, ref?: Ref<HTMLButtonElement>) => {\n  switch (props.variant) {\n    case \"primary\":\n      return <PrimaryButton ref={ref} {...props} />\n    case \"secondary\":\n      return <SecondaryButton ref={ref} {...props} />\n    case \"reject\":\n      return <RejectButton ref={ref} {...props} />\n    case \"tertiary\":\n      return <TertiaryButton ref={ref} {...props} />\n    case \"outlined\":\n      return <SecondaryButton ref={ref} {...props} />\n    case \"blue\":\n      return <BlueButton ref={ref} {...props} />\n    case \"white\":\n      return <WhiteButton ref={ref} {...props} />\n    case \"icon\":\n      return <IconButton ref={ref} {...props} />\n    default:\n      return <PrimaryButton ref={ref} {...props} />\n  }\n})\n\n// eslint-disable-next-line i18next/no-literal-string\nButton.displayName = \"Button\"\n\nexport default Button\n"],"names":[],"sourceRoot":""}
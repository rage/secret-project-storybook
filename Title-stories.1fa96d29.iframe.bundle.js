"use strict";(self.webpackChunkshared_module=self.webpackChunkshared_module||[]).push([[1567],{"./stories/Title.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Large:()=>Large,Medium:()=>Medium,Small:()=>Small,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Title_stories});__webpack_require__("./node_modules/react/index.js");var emotion_styled_browser_esm=__webpack_require__("./node_modules/@emotion/styled/dist/emotion-styled.browser.esm.js"),styles=__webpack_require__("./src/styles/index.ts"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const StyledTitle=emotion_styled_browser_esm.A.h1`
  font-weight: ${styles.NM.bold};
  color: ${styles.$7.colors.clear[200]};
  font-size: ${({variant})=>"large"===variant?styles.Il.h1:"medium"===variant?styles.Il.h2:styles.Il.h3};
`,Title=props=>(0,jsx_runtime.jsx)(StyledTitle,{...props,children:props.children});Title.displayName="Title";const components_Title=Title;try{Title.displayName="Title",Title.__docgenInfo={description:"",displayName:"Title",props:{variant:{defaultValue:null,description:"",name:"variant",required:!0,type:{name:"enum",value:[{value:'"large"'},{value:'"medium"'},{value:'"small"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Title.tsx#Title"]={docgenInfo:Title.__docgenInfo,name:"Title",path:"src/components/Title.tsx#Title"})}catch(__react_docgen_typescript_loader_error){}const Title_stories={parameters:{storySource:{source:'\nimport { Meta, Story } from "@storybook/react"\nimport React from "react"\n\nimport Title from "../src/components/Title"\n\nexport default {\n  title: "Components/Title",\n  component: Title,\n} as Meta\n\nconst Component = Title\n\ntype ComponentProps = React.ComponentProps<typeof Component>\n\nconst Template: Story<ComponentProps> = (args: ComponentProps) => <Component {...args} />\n\nexport const Large: Story<ComponentProps> = Template.bind({})\nLarge.args = {\n  children: "Title",\n  variant: "large",\n}\n\nexport const Medium: Story<ComponentProps> = Template.bind({})\nMedium.args = {\n  children: "Title",\n  variant: "medium",\n}\n\nexport const Small: Story<ComponentProps> = Template.bind({})\nSmall.args = {\n  children: "Title",\n  variant: "small",\n}\n',locationsMap:{large:{startLoc:{col:40,line:16},endLoc:{col:89,line:16},startBody:{col:40,line:16},endBody:{col:89,line:16}},medium:{startLoc:{col:40,line:16},endLoc:{col:89,line:16},startBody:{col:40,line:16},endBody:{col:89,line:16}},small:{startLoc:{col:40,line:16},endLoc:{col:89,line:16},startBody:{col:40,line:16},endBody:{col:89,line:16}}}}},title:"Components/Title",component:components_Title},Component=components_Title,Template=args=>(0,jsx_runtime.jsx)(Component,{...args});Template.displayName="Template";const Large=Template.bind({});Large.args={children:"Title",variant:"large"};const Medium=Template.bind({});Medium.args={children:"Title",variant:"medium"};const Small=Template.bind({});Small.args={children:"Title",variant:"small"},Large.parameters={...Large.parameters,docs:{...Large.parameters?.docs,source:{originalSource:"(args: ComponentProps) => <Component {...args} />",...Large.parameters?.docs?.source}}},Medium.parameters={...Medium.parameters,docs:{...Medium.parameters?.docs,source:{originalSource:"(args: ComponentProps) => <Component {...args} />",...Medium.parameters?.docs?.source}}},Small.parameters={...Small.parameters,docs:{...Small.parameters?.docs,source:{originalSource:"(args: ComponentProps) => <Component {...args} />",...Small.parameters?.docs?.source}}};const __namedExportsOrder=["Large","Medium","Small"]}}]);
//# sourceMappingURL=Title-stories.1fa96d29.iframe.bundle.js.map
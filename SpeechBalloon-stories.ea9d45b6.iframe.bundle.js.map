{"version":3,"file":"SpeechBalloon-stories.ea9d45b6.iframe.bundle.js","mappings":";;;;;AAwBA;AAWA;;;AAGA;AA1BA;AAAA;;AAAA;AAoCA;;AAGA;;;;AC+DA","sources":["webpack://shared-module/./src/components/SpeechBalloon.tsx","webpack://shared-module/./stories/SpeechBalloon.stories.tsx"],"sourcesContent":["import { css } from \"@emotion/css\"\nimport React from \"react\"\n\nimport { baseTheme } from \"../styles\"\nimport { runCallbackIfEnterPressed } from \"../utils/accessibility\"\n\nexport interface SpeechBalloonProps {\n  className?: string\n  onClick?: () => void\n  children?: React.ReactNode\n}\n\nconst SQUARE_SIZE = \"1rem\"\n\nconst SpeechBalloon = React.forwardRef<HTMLDivElement, SpeechBalloonProps>(\n  ({ children, className, onClick }, ref) => {\n    const bg = baseTheme.colors.gray[100]\n\n    const outerCss = css`\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      width: max-content;\n    `\n    return (\n      <div\n        ref={ref}\n        role=\"button\"\n        tabIndex={0}\n        onKeyDown={(e) => onClick && runCallbackIfEnterPressed(e, onClick)}\n        onClick={onClick}\n        className={`${outerCss} ${className}`}\n      >\n        <div\n          className={css`\n            background: ${bg};\n            width: max-content;\n            padding: 1rem;\n          `}\n        >\n          {children}\n        </div>\n        <div\n          className={css`\n            width: ${SQUARE_SIZE};\n            height: ${SQUARE_SIZE};\n            position: relative;\n            top: calc(-${SQUARE_SIZE} / 2);\n            background: ${bg};\n            transform: rotate(45deg);\n          `}\n        />\n      </div>\n    )\n  },\n)\n\n// eslint-disable-next-line i18next/no-literal-string\nSpeechBalloon.displayName = \"SpeechBalloon\"\nexport default SpeechBalloon\n","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-expect-error (Converted from ts-ignore)\n    var __STORY__ = \"/* eslint-disable i18next/no-literal-string */\\nimport { css } from \\\"@emotion/css\\\"\\nimport { Meta, Story } from \\\"@storybook/react\\\"\\nimport React from \\\"react\\\"\\n\\nimport SpeechBalloon from \\\"../src/components/SpeechBalloon\\\"\\n\\nexport default {\\n  title: \\\"Components/SpeechBalloon\\\",\\n  component: SpeechBalloon,\\n} as Meta\\n\\nconst Component = SpeechBalloon\\n\\ntype ComponentProps = React.ComponentProps<typeof Component>\\n\\n// @ts-ignore: seems to work\\nconst Template: Story<ComponentProps> = (args: ComponentProps) => <Component {...args} />\\n\\nexport const Primary: Story<ComponentProps> = Template.bind({})\\nPrimary.args = {\\n  children: \\\"SpeechBalloon\\\",\\n}\\n\\nexport const Positioned: Story<ComponentProps> = Template.bind({})\\nPositioned.args = {\\n  children: \\\"A positioned SpeechBalloon\\\",\\n  className: css`\\n    position: absolute;\\n    right: 0;\\n    top: 0;\\n  `,\\n}\\n\";\n    // @ts-expect-error (Converted from ts-ignore)\n    var __LOCATIONS_MAP__ = {\n  \"Primary\": {\n    \"startLoc\": {\n      \"col\": 40,\n      \"line\": 14\n    },\n    \"endLoc\": {\n      \"col\": 89,\n      \"line\": 14\n    },\n    \"startBody\": {\n      \"col\": 40,\n      \"line\": 14\n    },\n    \"endBody\": {\n      \"col\": 89,\n      \"line\": 14\n    }\n  },\n  \"Positioned\": {\n    \"startLoc\": {\n      \"col\": 40,\n      \"line\": 14\n    },\n    \"endLoc\": {\n      \"col\": 89,\n      \"line\": 14\n    },\n    \"startBody\": {\n      \"col\": 40,\n      \"line\": 14\n    },\n    \"endBody\": {\n      \"col\": 89,\n      \"line\": 14\n    }\n  }\n};\n    \n/* eslint-disable i18next/no-literal-string */\nimport { css } from \"@emotion/css\";\nimport { Meta, Story } from \"@storybook/react\";\nimport React from \"react\";\nimport SpeechBalloon from \"../src/components/SpeechBalloon\";\nexport default ({parameters: {\n  \"storySource\": {\n    \"source\": \"\\nimport { css } from \\\"@emotion/css\\\";\\nimport { Meta, Story } from \\\"@storybook/react\\\";\\nimport React from \\\"react\\\";\\nimport SpeechBalloon from \\\"../src/components/SpeechBalloon\\\";\\nexport default ({\\n  title: \\\"Components/SpeechBalloon\\\",\\n  component: SpeechBalloon\\n} as Meta);\\nconst Component = SpeechBalloon;\\ntype ComponentProps = React.ComponentProps<typeof Component>;\\n\\n// @ts-ignore: seems to work\\nconst Template: Story<ComponentProps> = (args: ComponentProps) => <Component {...args} />;\\nexport const Primary: Story<ComponentProps> = Template.bind({});\\nPrimary.args = {\\n  children: \\\"SpeechBalloon\\\"\\n};\\nexport const Positioned: Story<ComponentProps> = Template.bind({});\\nPositioned.args = {\\n  children: \\\"A positioned SpeechBalloon\\\",\\n  className: css`\\n    position: absolute;\\n    right: 0;\\n    top: 0;\\n  `\\n};\\nPrimary.parameters = {\\n  ...Primary.parameters,\\n  docs: {\\n    ...Primary.parameters?.docs,\\n    source: {\\n      originalSource: \\\"(args: ComponentProps) => <Component {...args} />\\\",\\n      ...Primary.parameters?.docs?.source\\n    }\\n  }\\n};\\nPositioned.parameters = {\\n  ...Positioned.parameters,\\n  docs: {\\n    ...Positioned.parameters?.docs,\\n    source: {\\n      originalSource: \\\"(args: ComponentProps) => <Component {...args} />\\\",\\n      ...Positioned.parameters?.docs?.source\\n    }\\n  }\\n};\",\n    \"locationsMap\": {\n      \"primary\": {\n        \"startLoc\": {\n          \"col\": 40,\n          \"line\": 14\n        },\n        \"endLoc\": {\n          \"col\": 89,\n          \"line\": 14\n        },\n        \"startBody\": {\n          \"col\": 40,\n          \"line\": 14\n        },\n        \"endBody\": {\n          \"col\": 89,\n          \"line\": 14\n        }\n      },\n      \"positioned\": {\n        \"startLoc\": {\n          \"col\": 40,\n          \"line\": 14\n        },\n        \"endLoc\": {\n          \"col\": 89,\n          \"line\": 14\n        },\n        \"startBody\": {\n          \"col\": 40,\n          \"line\": 14\n        },\n        \"endBody\": {\n          \"col\": 89,\n          \"line\": 14\n        }\n      }\n    }\n  }\n,},\n  title: \"Components/SpeechBalloon\",\n  component: SpeechBalloon\n} as Meta);\nconst Component = SpeechBalloon;\ntype ComponentProps = React.ComponentProps<typeof Component>;\n\n// @ts-ignore: seems to work\nconst Template: Story<ComponentProps> = (args: ComponentProps) => <Component {...args} />;\nexport const Primary: Story<ComponentProps> = Template.bind({});;\nPrimary.args = {\n  children: \"SpeechBalloon\"\n};\nexport const Positioned: Story<ComponentProps> = Template.bind({});\nPositioned.args = {\n  children: \"A positioned SpeechBalloon\",\n  className: css`\n    position: absolute;\n    right: 0;\n    top: 0;\n  `\n};\nPrimary.parameters = {\n  ...Primary.parameters,\n  docs: {\n    ...Primary.parameters?.docs,\n    source: {\n      originalSource: \"(args: ComponentProps) => <Component {...args} />\",\n      ...Primary.parameters?.docs?.source\n    }\n  }\n};\nPositioned.parameters = {\n  ...Positioned.parameters,\n  docs: {\n    ...Positioned.parameters?.docs,\n    source: {\n      originalSource: \"(args: ComponentProps) => <Component {...args} />\",\n      ...Positioned.parameters?.docs?.source\n    }\n  }\n};"],"names":[],"sourceRoot":""}
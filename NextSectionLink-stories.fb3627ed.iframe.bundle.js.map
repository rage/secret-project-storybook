{"version":3,"file":"NextSectionLink-stories.fb3627ed.iframe.bundle.js","mappings":";;;;;;;;AAiCA;;;;;;;AAUA;AACA;;;;;;;;;;;;;;;AAeA;;;;AAIA;;;;;AAKA;;;AAGA;;;;AAIA;;;AAOA;AAQA;;;;;AAKA;;;;;AAgBA;AACA;;AAOA;;;;;;AAMA;;;AAGA;;AAOA;;;;AAIA;AACA;;;AAGA;AAMA;;;;;;;;;;;;;;AAcA;;;;AAIA;;;;AAmBA;;;AAGA;;;;;AAQA;;;;;AAKA;AAIA;;;;;;;;;;;;;;AAgBA;;;;;;;;;;;;AAYA;AACA;;;;AAIA;;;;AAIA;;;AAcA;;;;;;;;;AAWA;;;;;;;;AAQA","sources":["webpack://shared-module/./src/components/NextSectionLink.tsx"],"sourcesContent":["import { css } from \"@emotion/css\"\nimport styled from \"@emotion/styled\"\nimport Link from \"next/link\"\nimport React, { Fragment } from \"react\"\nimport { useTranslation } from \"react-i18next\"\n\nimport ArrowSVGIcon from \"../img/arrow.svg\"\nimport BackArrowIcon from \"../img/backarrow.svg\"\nimport LockIcon from \"../img/lock.svg\"\nimport TopArrowSVGIcon from \"../img/up-arrow.svg\"\nimport { baseTheme, headingFont, typography } from \"../styles\"\nimport { respondToOrLarger } from \"../styles/respond\"\n\nimport LinkOrNoLink from \"./LinkOrNoLink\"\nimport HideTextInSystemTests from \"./system-tests/HideTextInSystemTests\"\n\nexport interface NextSectionLinkExtraProps {\n  title: string\n  subtitle: string\n  nextTitle: string\n  url?: string\n  previous?: string\n  chapterFrontPageURL?: string\n}\n\nconst Wrapper = styled.div`\n  overflow: hidden;\n  position: relative;\n  left: 50%;\n  right: 50%;\n  margin-left: -50vw;\n  margin-right: -50vw;\n  width: calc(0px + 100vw);\n  ${respondToOrLarger.md} {\n    margin-top: 2rem;\n    margin-bottom: 2rem;\n    padding: 3rem 0 3.5rem 0;\n  }\n  background: #f4f6f8;\n  padding: 1.5rem 1rem 2rem 1.4rem;\n`\n\n// eslint-disable-next-line i18next/no-literal-string\nconst StyledLink = styled(Link)`\n  border: 1px solid ${baseTheme.colors.blue[200]};\n  padding: 0.3rem 1rem;\n  background: #fff;\n  display: inline-block;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  text-decoration: none;\n  transition: all 0.2s;\n  margin-bottom: 2.4rem;\n\n  span {\n    font-size: 15px;\n    font-weight: 500;\n    padding-left: 8px;\n    color: ${baseTheme.colors.blue[700]};\n  }\n\n  .arrow {\n    fill: ${baseTheme.colors.blue[500]};\n  }\n\n  &:hover {\n    cursor: pointer;\n    background: ${baseTheme.colors.blue[100]};\n\n    span {\n      color: ${baseTheme.colors.blue[600]};\n    }\n\n    .arrow {\n      fill: ${baseTheme.colors.blue[600]};\n    }\n  }\n`\n\nexport type NextSectionLinkProps = React.HTMLAttributes<HTMLDivElement> & NextSectionLinkExtraProps\n\nconst NextSectionLink: React.FC<\n  React.PropsWithChildren<React.PropsWithChildren<NextSectionLinkProps>>\n> = ({ title, subtitle, nextTitle, url, previous, chapterFrontPageURL }) => {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <div\n        className={css`\n          font-family: ${headingFont};\n          min-height: auto;\n          max-width: 48rem;\n          margin-left: auto;\n          margin-right: auto;\n        `}\n      >\n        {chapterFrontPageURL && (\n          <StyledLink href={chapterFrontPageURL}>\n            <TopArrowSVGIcon id=\"up-svg-icon\" role=\"presentation\" alt=\"\" />\n            <span>{t(\"chapter-front-page\")}</span>\n          </StyledLink>\n        )}\n\n        <Fragment>\n          <h2\n            className={css`\n              font-size: clamp(28px, 3vw, 2rem);\n              line-height: 1.3;\n              font-weight: 600;\n              opacity: 0.9;\n              color: ${baseTheme.colors.gray[700]};\n            `}\n          >\n            {title}\n          </h2>\n          <p\n            className={css`\n              font-size: 18px;\n              color: ${baseTheme.colors.gray[700]};\n              font-weight: 500;\n              margin: 0.3rem 0;\n              padding: 0;\n              display: flex;\n\n              ${respondToOrLarger.md} {\n                font-size: 20px;\n              }\n            `}\n          >\n            {subtitle}\n          </p>\n          <div\n            className={css`\n              display: grid;\n              grid-template-columns: ${previous ? \"60px 1fr\" : \"1fr\"};\n              column-gap: 10px;\n              margin-top: 1.5rem;\n\n              ${respondToOrLarger.md} {\n                grid-template-columns: ${previous ? \"80px 1fr\" : \"1fr\"};\n                column-gap: 12px;\n              }\n            `}\n          >\n            {previous && (\n              <Link href={previous} aria-label={t(\"previous-page\")}>\n                <div\n                  className={css`\n                    background: ${baseTheme.colors.green[100]};\n                    display: flex;\n                    justify-content: center;\n                    align-items: center;\n                    height: 100%;\n\n                    &:hover {\n                      filter: brightness(95%) contrast(110%);\n                      cursor: pointer;\n                    }\n\n                    svg {\n                      fill: #44827e;\n                      width: 30%;\n                      ${respondToOrLarger.md} {\n                        width: 100%;\n                      }\n                    }\n                  `}\n                >\n                  <BackArrowIcon\n                    id=\"back-arrow-icon\"\n                    role=\"presentation\"\n                    alt=\"\"\n                    width=\"25\"\n                    height=\"25\"\n                    viewBox=\"0 0 39 39\"\n                  />\n                </div>\n              </Link>\n            )}\n            <LinkOrNoLink\n              url={url}\n              linkClassName={css`\n                overflow: hidden;\n                text-decoration: none;\n                &:focus-visible {\n                  outline: 2px solid ${baseTheme.colors.green[500]};\n                  outline-offset: 2px;\n                }\n              `}\n            >\n              <div\n                className={css`\n                  display: flex;\n                  flex-direction: row;\n                  width: 100%;\n                  transition: filter 0.2s;\n                  cursor: ${url ? \"pointer\" : \"not-allowed\"};\n                  &:hover {\n                    text-decoration: none;\n                    filter: brightness(92%) contrast(110%);\n                  }\n                `}\n              >\n                <div\n                  className={css`\n                    background-color: ${url\n                      ? baseTheme.colors.green[600]\n                      : baseTheme.colors.gray[600]};\n\n                    flex: 1;\n                    line-height: 1.3;\n                    width: 100%;\n                    padding: 1.2rem 1rem;\n\n                    overflow: hidden;\n                    white-space: nowrap;\n                    text-overflow: ellipsis;\n\n                    .next-page-title {\n                      display: block;\n                      width: 100%;\n                      font-size: ${typography.h5};\n                      font-weight: 600;\n                      color: #fff;\n                      white-space: nowrap;\n                      text-overflow: ellipsis;\n                      overflow: hidden;\n                    }\n                    .next-page-subtitle {\n                      font-weight: medium;\n                      color: #dae6e5;\n                      font-size: 15px;\n\n                      ${respondToOrLarger.md} {\n                        font-size: ${typography.paragraph};\n                      }\n                    }\n\n                    ${respondToOrLarger.md} {\n                      width: 68%;\n                      padding: 1.2rem 1.8rem;\n                    }\n                  `}\n                >\n                  <span className=\"next-page-subtitle\">{t(\"next-page\")}:</span>\n                  <span className=\"next-page-title\">\n                    <HideTextInSystemTests\n                      text={nextTitle}\n                      testPlaceholder={\"Title of the next page\"}\n                    />\n                  </span>\n                </div>\n                <div\n                  className={css`\n                    color: white;\n                    padding: 16px 16px 16px 0;\n                    background-color: ${url\n                      ? baseTheme.colors.green[600]\n                      : baseTheme.colors.gray[600]};\n                    display: flex;\n                    justify-content: center;\n                    align-items: center;\n\n                    .arrow {\n                      fill: #fff;\n                    }\n\n                    ${respondToOrLarger.sm} {\n                      padding: 1.6rem;\n                      width: auto;\n                    }\n\n                    svg {\n                      width: auto;\n                    }\n                  `}\n                >\n                  {url ? (\n                    <ArrowSVGIcon\n                      id=\"right-svg-icon\"\n                      role=\"presentation\"\n                      alt=\"\"\n                      width=\"30\"\n                      height=\"30\"\n                      viewBox=\"0 0 39 39\"\n                    />\n                  ) : (\n                    <LockIcon\n                      id=\"svg-icon\"\n                      role=\"presentation\"\n                      alt=\"\"\n                      width=\"24\"\n                      height=\"36\"\n                      viewBox=\"0 0 24 36\"\n                    />\n                  )}\n                </div>\n              </div>\n            </LinkOrNoLink>\n          </div>\n        </Fragment>\n      </div>\n    </Wrapper>\n  )\n}\n\nexport default NextSectionLink\n"],"names":[],"sourceRoot":""}